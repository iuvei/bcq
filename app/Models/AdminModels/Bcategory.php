<?php

namespace App\Models\AdminModels;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Builder;

class Bcategory extends Model
{
    protected $table = 'bcategory';
    protected $guarded = [];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::addGlobalScope("avaiable",function (Builder $query){
            $query->whereIn('status',[0,1]);
        });
    }

    static public function getCategory($orderField='id')
    {
        $categorys = Bcategory::orderBy($orderField, 'desc')->get();

        foreach ($categorys as $k=>$v){
            if($v->fid==0){
                $categorys[$k]['_cname'] = $categorys[$k]['cname'];
                foreach ($categorys as $m=>$n){
                    if($n->fid == $v->id){
                        $categorys[$m]['_cname'] = $v['cname'].'â”€â”€'.$categorys[$m]['cname'];
                    }
                }
            }
        }
        return $categorys;
    }

    static public function getFirstCategory($categorys,$pid = 0)
    {
        $arr = array();
        foreach ($categorys as $key => $val){
            if ($val->fid == $pid){
                $arr[] = $val;
                self::getLastCategory($categorys,$val->id);
            }
        }
        return $arr;
    }

    static public function getLastCategory($categorys,$pid = 0)
    {
        $arr = array();
        foreach ($categorys as $key => $val){
            if ($val->fid == $pid){
                unset($categorys[$key]);
                self::getLastCategory($categorys,$val->id);
            }else{
                $arr[] = $val;
            }
        }
        return $arr;
    }

    static public function getGroupCategory()
    {
        $arr = Bcategory::where('status',1)->get()->groupBy('fid');
        return $arr;
    }

    static function getCategoryCount($statusSign,$status)
    {
        $count = Bcategory::where('status',$statusSign,$status)->count();
        return $count;
    }



}
